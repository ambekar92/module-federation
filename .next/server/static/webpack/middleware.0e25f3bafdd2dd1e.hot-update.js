"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("middleware",{

/***/ "(middleware)/./middleware.ts":
/*!***********************!*\
  !*** ./middleware.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   middleware: () => (/* binding */ middleware)\n/* harmony export */ });\n/* harmony import */ var next_auth_jwt__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/jwt */ \"(middleware)/./node_modules/next-auth/jwt/index.js\");\n/* harmony import */ var next_auth_jwt__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth_jwt__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_easy_middlewares__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-easy-middlewares */ \"(middleware)/./node_modules/next-easy-middlewares/dist/index.mjs\");\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n/* harmony import */ var _app_shared_types_role__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/shared/types/role */ \"(middleware)/./app/shared/types/role.ts\");\n// as of now getServerSession does not work in middleware. Recommended way is to use next-auth/middleware\n// https://github.com/nextauthjs/next-auth/issues/7732#issuecomment-1577104038\n\n\n\n\nconst middlewares = {\n    // only primary_qualifying_owner and contributor  can access this route\n    \"/dashboard/:path*\": async (request)=>{\n        const { email_password_auth_token, permissions, token, originalUrl } = await getData(request);\n        if (!token && !email_password_auth_token) {\n            return next_server__WEBPACK_IMPORTED_MODULE_2__.NextResponse.redirect(`${request.nextUrl.origin}/login?next=${originalUrl}`);\n        } else if (isRole(permissions, _app_shared_types_role__WEBPACK_IMPORTED_MODULE_3__.Role.PRIMARY_QUALIFYING_OWNER) || isRole(permissions, _app_shared_types_role__WEBPACK_IMPORTED_MODULE_3__.Role.CONTRIBUTOR)) {\n            return next_server__WEBPACK_IMPORTED_MODULE_2__.NextResponse.redirect(`${request.nextUrl.origin}/admin/dashboard`);\n        } else if (!isRole(permissions, _app_shared_types_role__WEBPACK_IMPORTED_MODULE_3__.Role.PRIMARY_QUALIFYING_OWNER) && !isRole(permissions, _app_shared_types_role__WEBPACK_IMPORTED_MODULE_3__.Role.CONTRIBUTOR) && !isRole(permissions, _app_shared_types_role__WEBPACK_IMPORTED_MODULE_3__.Role.ADMIN)) {\n            return next_server__WEBPACK_IMPORTED_MODULE_2__.NextResponse.redirect(`${request.nextUrl.origin}/user/dashboard`);\n        } else {\n            return next_server__WEBPACK_IMPORTED_MODULE_2__.NextResponse.next();\n        }\n    },\n    \"/admin/dashboard\": async (request)=>{\n        // only admin  can access this route\n        const { email_password_auth_token, permissions, token, originalUrl } = await getData(request);\n        if (!token && !email_password_auth_token) {\n            return next_server__WEBPACK_IMPORTED_MODULE_2__.NextResponse.redirect(`${request.nextUrl.origin}/login?next=${originalUrl}`);\n        } else if (isRole(permissions, _app_shared_types_role__WEBPACK_IMPORTED_MODULE_3__.Role.PRIMARY_QUALIFYING_OWNER) || isRole(permissions, _app_shared_types_role__WEBPACK_IMPORTED_MODULE_3__.Role.CONTRIBUTOR)) {\n            return next_server__WEBPACK_IMPORTED_MODULE_2__.NextResponse.redirect(`${request.nextUrl.origin}/dashboard`);\n        } else if (!isRole(permissions, _app_shared_types_role__WEBPACK_IMPORTED_MODULE_3__.Role.PRIMARY_QUALIFYING_OWNER) && !isRole(permissions, _app_shared_types_role__WEBPACK_IMPORTED_MODULE_3__.Role.CONTRIBUTOR) && !isRole(permissions, _app_shared_types_role__WEBPACK_IMPORTED_MODULE_3__.Role.ADMIN)) {\n            return next_server__WEBPACK_IMPORTED_MODULE_2__.NextResponse.redirect(`${request.nextUrl.origin}/user/dashboard`);\n        } else {\n            return next_server__WEBPACK_IMPORTED_MODULE_2__.NextResponse.next();\n        }\n    },\n    // protect all routes except /login\n    \"regex:^(?!(/login$|/login-tester$)).*$\": async (request)=>{\n        const { email_password_auth_token, token, originalUrl } = await getData(request);\n        if (!token && !email_password_auth_token) {\n            return next_server__WEBPACK_IMPORTED_MODULE_2__.NextResponse.redirect(`${request.nextUrl.origin}/login?next=${originalUrl}`);\n        } else return next_server__WEBPACK_IMPORTED_MODULE_2__.NextResponse.next();\n    }\n};\nconst config = {\n    matcher: []\n};\nconst middleware = (0,next_easy_middlewares__WEBPACK_IMPORTED_MODULE_1__.createMiddleware)(middlewares);\nfunction isRole(permissions, role) {\n    return permissions.some((permission)=>permission.slug === role);\n}\nasync function getData(request) {\n    const token = await (0,next_auth_jwt__WEBPACK_IMPORTED_MODULE_0__.getToken)({\n        req: request,\n        secret: process.env.NEXTAUTH_SECRET\n    });\n    const cookies = request.cookies;\n    const email_password_auth_token = cookies.has(\"email_password_auth_token\") ? JSON.parse(cookies.get(\"email_password_auth_token\")?.value ?? \"\") : \"\";\n    const permissions = token?.permissions || email_password_auth_token?.permissions;\n    const originalUrl = encodeURIComponent(request.nextUrl.pathname);\n    return {\n        token,\n        permissions,\n        email_password_auth_token,\n        originalUrl\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./middleware.ts\n");

/***/ })

});